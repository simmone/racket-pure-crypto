#lang racket

(require rackunit)
(require rackunit/text-ui)

(require "../../../src/cipher/des/des.rkt")
(require "../../../../../racket-detail/detail/main.rkt")

(define test-des
  (test-suite
   "test-des"

   (test-case
    "test-ecb"

    (check-equal?
     (detail 
      #:formats? '(console "des.pdf")
      (lambda ()
        (detail-page
         (lambda ()
           (des
            "0110000100000111000001110000011100000111000001110000011100000111"
            '(
              "111000001011111001101110101000010101000000101101"
              "111000001011011011110110001010110100111010000000"
              "111101001101011001110110000110000110000100010011"
              "111001101101001101110010101001110100000000000100"
              "101011101101001101110111110000000010001111000010"
              "101011110101001101011011101101001000001000001101"
              "001011110101001111111001010100100001011011000010"
              "100111110101100111011001000111001010000100101001"
              "000111110100100111011011001001000100010010101101"
              "001111110110100110011101010010100001100011000011"
              "000111110010110110001101100001101100000100111001"
              "010110110010110010111101000000110001111101000000"
              "110111011010110010101100110110001000000100110000"
              "110100101010111010101110010000010100111000001100"
              "111110001011111000100110010110000011000010011000"
              "111100011011111000100110100110001010010000110101"
              ))))))
     "1001001000010110010101001001010111101101101001001000001001001101")
    )

   ))

 (run-tests test-des)
